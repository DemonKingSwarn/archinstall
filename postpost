#!/usr/bin/env sh

# create log file
logfile="$HOME/install.log"
mkfifo "$logfile.pipe"
tee -a "$logfile" < "$logfile.pipe" &
exec > "$logfile.pipe" 2>&1
trap 'rm -f "$logfile.pipe"' EXIT


cat <<- 'EOF'
 ____  _____ __  __  ___  _   _  ___  ____  
|  _ \| ____|  \/  |/ _ \| \ | |/ _ \/ ___| 
| | | |  _| | |\/| | | | |  \| | | | \___ \ 
| |_| | |___| |  | | |_| | |\  | |_| |___) |
|____/|_____|_|  |_|\___/|_| \_|\___/|____/ 

     an Arch Linux meta-distribution
EOF

ARCH="$(uname -m)"
GITHUB="https://github.com/demonkingswarn"
WALLPAPER_DIR="${XDG_PICTURE_HOME:-$HOME/pix}"
CPG_BIN="https://github.com/DemonKingSwarn/dotfiles/releases/download/0.0.1/cpg"
MVG_BIN="https://github.com/DemonKingSwarn/dotfiles/releases/download/0.0.1/mvg"
AUR_HELPER="paru"

PKGS="opendoas fastfetch dash git zoxide eza bat starship stow zsh fzf river wideriver pipewire pipewire-pulse pipewire-alsa pipewire-jack wireplumber hyprlock swww nsxiv-demon waybar swaync wezterm ghostty brave-bin floorp thunar grim slurp swappy brightnessctl playerctl rofi-wayland rofi-file-browser-extended-patched power-profiles-daemon pavucontrol blueman galculator gammastep pamixer pulsemixer ly polkit-gnome network-manager-applet udiskie xwayland-satellite copyq xdg-desktop-portal xdg-desktop-portal-hyprland wine dxvk-bin vkd3d-proton-bin proton-ge-custom rm-improved-bin aria2 wget duf gdu cyme steam heroic-games-launcher-bin gamescope hyprpicker"

mkdir -p "$HOME/.local/bin" && mkdir -p "$HOME/.cache/zsh" && mkdir -p "$HOME/.proton"
test "$HOME/.cache/zsh/history" || touch "$HOME/.cache/zsh/history"
test -d "$WALLPAPER_DIR" || mkdir -p "$WALLPAPER_DIR"

echo "[*] Installing packages..."
$AUR_HELPER -S $PKGS --noconfirm

git clone --quiet --depth 1 "$GITHUB/dotfiles" $HOME/.dots
git clone --quiet --depth 1 "$GITHUB/scripts" $HOME/.scripts
git clone --quiet --depth 1 "$GITHUB/fonts" $HOME/.local/share/
git clone --quiet --depth 1 "$GITHUB/wallpapers" $WALLPAPER_DIR/wall

fc-cache -vf

git clone --depth 1 "$GITHUB/nvim" $HOME/.config/nvim

cd "$HOME/.dots"
stow --ignore="screenshot.png" --ignore="README.org" --ignore=".git" --ignore=".assets" .

sudo cp $HOME/.config/env /etc/zsh/zshenv

chsh -s $(which zsh)

sudo ln -sf $(which dash) /bin/sh

if [ "$ARCH" = "x86_64" ]; then
  cd "$HOME"
  wget "$CPG_BIN"
  wget "$MVG_BIN"
  chmod +x cpg mvg

  sudo mv cpg /usr/local/bin
  sudo mv mvg /usr/local/bin
fi

gpu_type=$(lspci)

echo "$gpu_type" | grep -qE "NVIDIA|GeForce"
if [ $? -eq 0 ]; then
  $AUR_HELPER -S --noconfirm --needed nvidia-open-dkms opencl-nvidia nvidia-utils nvidia-prime nvidia-container-toolkit libvdpau nvtop libnvidia-container libva-nvidia-driver lib32-libvdpau lib32-nvidia-utils lib32-opencl-nvidia
fi

cpu_vendor=$(grep 'vendor_id' /proc/cpuinfo | head -n1 | cut -d':' -f2 | sed 's/ //g')

if [ "$cpu_vendor" = "GenuineIntel" ]; then
  $AUR_HELPER -S --noconfirm --needed vulkan-intel libva-intel-driver intel-ucode lib32-vulkan-intel intel-media-driver mesa lib32-mesa mesa-utils lib32-mesa-utils
else
  $AUR_HELPER -S --noconfirm --needed mesa lib32-mesa mesa-utils lib32-mesa-utils
fi
